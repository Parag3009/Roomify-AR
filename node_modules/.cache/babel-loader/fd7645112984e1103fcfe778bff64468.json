{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem-8\\\\Major Project\\\\proj\\\\ArProject\\\\src\\\\components\\\\InfinityList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './Grid';\nimport ProductCard from './ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfinityList = props => {\n  _s();\n  const perLoad = 6; // items each load\n\n  const listRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (listRef && listRef.current) {\n        if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n          console.log(\"bottom reach\");\n          setLoad(true);\n        }\n      }\n    });\n  }, [listRef]);\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      col: 3,\n      mdCol: 2,\n      smCol: 1,\n      gap: 20,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        img01: item.image01,\n        img02: item.image02,\n        name: item.title,\n        price: Number(item.price),\n        slug: item.slug\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(InfinityList, \"AENhqrXICbMD9iIt8+4R76Tu7cw=\");\n_c = InfinityList;\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default InfinityList;\nvar _c;\n$RefreshReg$(_c, \"InfinityList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","Grid","ProductCard","jsxDEV","_jsxDEV","InfinityList","props","_s","perLoad","listRef","data","setData","load","setLoad","index","setIndex","slice","window","addEventListener","current","scrollY","innerHeight","clientHeight","offsetTop","console","log","getItems","pages","Math","floor","length","maxIndex","start","end","concat","ref","children","col","mdCol","smCol","gap","map","item","img01","image01","img02","image02","name","title","price","Number","slug","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["D:/Sem-8/Major Project/proj/ArProject/src/components/InfinityList.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Grid from './Grid'\r\nimport ProductCard from './ProductCard'\r\n\r\nconst InfinityList = props => {\r\n\r\n    const perLoad = 6 // items each load\r\n\r\n    const listRef = useRef(null)\r\n    \r\n    const [data, setData] = useState([])\r\n\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const [index, setIndex] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setData(props.data.slice(0, perLoad))\r\n        setIndex(1)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (listRef && listRef.current) {\r\n                if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\r\n                    console.log(\"bottom reach\")\r\n                    setLoad(true)\r\n                }\r\n            }\r\n            \r\n        })\r\n    }, [listRef])\r\n\r\n    useEffect(() => {\r\n        const getItems = () => {\r\n            const pages = Math.floor(props.data.length / perLoad)\r\n            const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1\r\n\r\n            if (load && index <= maxIndex) {\r\n                const start = perLoad * index\r\n                const end = start + perLoad\r\n\r\n                setData(data.concat(props.data.slice(start, end)))\r\n                setIndex(index + 1)\r\n            }\r\n        }\r\n        getItems()\r\n        setLoad(false)\r\n    }, [load, index, data, props.data])\r\n\r\n    return (\r\n        <div ref={listRef}>\r\n            <Grid\r\n                col={3}\r\n                mdCol={2}\r\n                smCol={1}\r\n                gap={20}\r\n            >\r\n                {\r\n                    data.map((item, index) => (\r\n                        <ProductCard\r\n                            key={index}\r\n                            img01={item.image01}\r\n                            img02={item.image02}\r\n                            name={item.title}\r\n                            price={Number(item.price)}\r\n                            slug={item.slug}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nInfinityList.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default InfinityList\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}